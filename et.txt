<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <script src="./node_modules/bootstrap/dist/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="./node_modules/bootstrap/dist/css/bootstrap.min.css">
    <script src="./node_modules/axios/dist/axios.min.js"></script>

    <style>
        body {
            background-color: #f0ecff;
        }

        #add-btn {
            position: fixed;
            bottom: 5%;
            right: 7%;
            height: 70px;
            width: 70px;
            font-size: 50px;
            color: white;
            border-radius: 50%;
            text-align: center;
            /*todo*/
            cursor: pointer;
            box-shadow: 0 10px 10px rgba(0, 0, 0, 0.3);
        }
    </style>
</head>

<body>
    <!-- modals -->

    <!-- login modal -->
    <div class="modal fade" id="login-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Login</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Username:</label>
                            <input type="text" class="form-control" id="username-input">
                        </div>
                        <div class="mb-3">
                            <label for="message-text" class="col-form-label">Password:</label>
                            <input type="password" class="form-control" id="password-input">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="loginBtnClicked()">Login</button>
                </div>
            </div>
        </div>
    </div>
    <!-- login modal -->

    <!-- register modal -->
    <div class="modal fade" id="register-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Register A New User</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">profile Image:</label>
                            <input type="file" class="form-control" id="register-image-input">
                        </div>

                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Name:</label>
                            <input type="text" class="form-control" id="register-name-input">
                        </div>

                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Username:</label>
                            <input type="text" class="form-control" id="register-username-input">
                        </div>

                        <div class="mb-3">
                            <label for="message-text" class="col-form-label">Password:</label>
                            <input type="password" class="form-control" id="register-password-input">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="registerBtnClicked()">Register</button>
                </div>
            </div>
        </div>
    </div>
    <!-- register modal -->

    <!-- create post modal -->
    <div class="modal fade" id="create-post-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create A New Post</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Title:</label>
                            <input type="text" class="form-control" id="post-title-input">
                        </div>

                        <div class="mb-3">
                            <textarea name="" id="post-body-input"
                                style="width: 100%; border-color:blue; border-radius:7px" rows="5"></textarea>
                        </div>

                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Image:</label>
                            <input type="file" class="form-control" id="post-image-input">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="createNewPostClicked()">Create</button>
                </div>
            </div>
        </div>
    </div>
    <!-- create post modal -->

    <!-- alerts -->

    <!-- alert -->

    <div id="success-alert" class="show fade"
        style="position: fixed; z-index: 999999; width: 30%; bottom: 0; right: 0;"></div>

    <!-- alert -->

    <!-- alerts -->

    <!-- modals -->

    <!-- add post button -->

    <div class="bg-primary" id="add-btn" data-bs-toggle="modal" data-bs-target="#create-post-modal">
        +
    </div>

    <!-- add post button -->

    <!-- nav bar -->
    <div class="container">
        <div class="d-flex justify-content-center">
            <div class="col-9">
                <nav class="navbar navbar-expand-lg bg-body-tertiary shadow rounded pt-3">
                    <div class="container-fluid">
                        <a class="navbar-brand" href="#">HATEM</a>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                            data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false"
                            aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarNav">
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <a class="nav-link active" aria-current="page" href="#">Home</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#">Profile</a>
                                </li>
                            </ul>

                            <!-- not loggedin -->
                            <div class="d-flex w-100 justify-content-end" id="logged-in-div">
                                <button id="login-btn" type="button" data-bs-toggle="modal"
                                    data-bs-target="#login-modal" class="btn btn-outline-success mx-2">Login</button>

                                <button id="register-btn" type="button" class="btn btn-outline-success"
                                    data-bs-toggle="modal" data-bs-target="#register-modal">Register</button>
                            </div>
                            <!-- not loggedin -->

                            <!-- loggedin -->
                            <div class="d-flex w-100 justify-content-end align-items-center" id="logout-div">
                                <img class="rounded-circle" style="width: 50px;" src="./profile-pics/Testimonials-2.jpg"
                                    alt="" id="nav-user-image">

                                <b id="nav-username">
                                    @HATEM
                                </b>

                                <button onclick="logout()" id="logout-btn" type="button" data-bs-toggle="modal"
                                    class="btn btn-outline-danger mx-2">Logout</button>
                            </div>
                            <!-- loggedin -->

                        </div>
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <!-- nav bar -->

    <!-- main content -->
    <div class="container" style="height: 1000px;">
        <!-- posts -->
        <div class="d-flex justify-content-center mt-5">
            <div class="col-9">
                <div id="posts">

                    <!-- post -->
                    <div class="card shadow my-5">
                        <div class="card-header">
                            <img src="./profile-pics/Testimonials-2.jpg" alt="" style="width: 40px; height: 40px;"
                                class="rounded-circle border border-2">
                            <b>@HATEM</b>
                        </div>
                        <div class="card-body">
                            <img class="w-100"
                                src="./placeholders/forest-4k-desktop-background-hd-wallpaper-preview.jpg" alt="">

                            <h6 style="color: grey;" class="mt-2">
                                2 min ago
                            </h6>

                            <h5>
                                hello world
                            </h5>

                            <p>
                                Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste molestiae amet tempore
                                esse praesentium beatae! Dolor, illum earum. Cupiditate id animi officia assumenda et
                                vero debitis cum nisi vel maxime.
                            </p>

                            <hr>

                            <div>

                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                    class="bi bi-chat-left-text-fill" viewBox="0 0 16 16">
                                    <path
                                        d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4.414a1 1 0 0 0-.707.293L.854 15.146A.5.5 0 0 1 0 14.793zm3.5 1a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1zm0 2.5a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1zm0 2.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1z" />
                                </svg>

                                <samp>
                                    (3) Comments
                                </samp>
                            </div>
                        </div>
                    </div>
                    <!-- post -->

                </div>
            </div>
        </div>


        <!-- posts -->
    </div>
    <!-- main content -->
</body>

<script>
    setupUI()

    const baseUrl = "https://tarmeezacademy.com/api/v1"

    getPosts()

    function getPosts() {
        axios.get(`${baseUrl}/posts?limit=20`)
            .then((response) => {
                const posts = response.data.data

                document.getElementById("posts").innerHTML = ""

                for (post of posts) {
                    const author = post.author

                    let postTitle = ""

                    if (post.title != null) {
                        postTitle = post.title
                    }

                    let content = `
                <div class="card shadow my-5">
                    <div class="card-header">
                        <img src="${author.profile_image}" alt="" style="width: 40px; height: 40px;"
                            class="rounded-circle border border-2">
                        <b>${author.username}</b>
                    </div>
                    <div class="card-body">
                        <img class="w-100"
                            src="${post.image}" alt="">

                        <h6 style="color: grey;" class="mt-2">
                            ${post.created_at}
                        </h6>

                        <h5>
                            ${postTitle}
                        </h5>

                        <p>
                            ${post.body}
                        </p>

                        <hr>

                        <div>

                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                class="bi bi-chat-left-text-fill" viewBox="0 0 16 16">
                                <path
                                    d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4.414a1 1 0 0 0-.707.293L.854 15.146A.5.5 0 0 1 0 14.793zm3.5 1a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1zm0 2.5a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1zm0 2.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1z" />
                            </svg>

                            <samp>
                                ${post.comments_count}

                                <span id="post-tags-${post.id}">
                                    
                                </span>
                            </samp>
                        </div>
                    </div>
                </div>
                `

                    document.getElementById("posts").innerHTML += content

                    const currentPostTagsId = `post-tags-${post.id}`
                    document.getElementById(currentPostTagsId).innerHTML = ""

                    for (tag of post.tags) {
                        console.log(tag.name)
                        let tagsContent = `
                    <button class="btn btn-sm rounded-5" style="background-color: gray; color: white">
                        ${tag.name}hahaha
                    </button>
                    `

                        document.getElementById(currentPostTagsId).innerHTML += tagsContent
                    }
                }
            })
    }


    function createNewPostClicked() {
        const title = document.getElementById("post-title-input").value
        const body = document.getElementById("post-body-input").value
        const image = document.getElementById("post-image-input").files[0]
        const token = localStorage.getItem("token")

        let formData = new FormData()
        formData.append("body", body)
        formData.append("title", title)
        formData.append("image", image)

        const url = `${baseUrl}/posts`
        const headers = {
            "Content-Type": "multipart/form-data",
            "authorization": `Bearer ${token}`
        }

        axios.post(url, formData, {
            headers: {
                "Content-Type": "multipart/form-data",
                "authorization": `Bearer ${token}`
            }
        })
            .then((response) => {
                const modal = document.getElementById("create-post-modal")
                const modalInstance = bootstrap.Modal.getInstance(modal)
                modalInstance.hide()
                showAlert("New Post Has Been Created", "success")
                getPosts()
            })
            .catch((error) => {
                const message = error.response.data.message
                showAlert(message, "danger")
            })
    }

    function loginBtnClicked() {
        const username = document.getElementById("username-input").value
        const password = document.getElementById("password-input").value

        const params = {
            "username": username,
            "password": password
        }

        const url = `${baseUrl}/login`

        axios.post(url, params)
            .then((response) => {
                localStorage.setItem("token", response.data.token)
                localStorage.setItem("user", JSON.stringify(response.data.user))

                const modal = document.getElementById("login-modal")
                const modalInstance = bootstrap.Modal.getInstance(modal)
                modalInstance.hide()

                showAlert("Logged in successfully", "success")

                setupUI()
            })
    }

    function registerBtnClicked() {
        const name = document.getElementById("register-name-input").value
        const username = document.getElementById("register-username-input").value
        const password = document.getElementById("register-password-input").value
        const image = document.getElementById("register-image-input").files[0]

        let formData = new FormData()
        formData.append("name", name)
        formData.append("username", username)
        formData.append("password", password)
        formData.append("image", image)


        const headers = {
            "Content-Type": "multipart/form-data",
        }

        const url = `${baseUrl}/register`

        axios.post(url, formData, {
            headers: {
                "Content-Type": "multipart/form-data",
                "authorization": `Bearer ${token}`
            }
        })
            .then((response) => {
                localStorage.setItem("token", response.data.token)
                localStorage.setItem("user", JSON.stringify(response.data.user))

                const modal = document.getElementById("register-modal")
                const modalInstance = bootstrap.Modal.getInstance(modal)
                modalInstance.hide()

                showAlert("New User Registered Successfully", "success")

                setupUI()
            }).catch((error) => {
                const message = error.response.data.message
                showAlert(message, "danger")
            })
    }

    function logout() {
        localStorage.removeItem("token")
        localStorage.removeItem("user")

        showAlert("Logged out successfully", "success")

        setupUI()
    }

    function showAlert(customMessage, type) {
        const alertPlaceholder = document.getElementById('success-alert')
        const appendAlert = (message, type) => {
            const wrapper = document.createElement('div')
            wrapper.innerHTML = [
                `<div class="alert alert-${type} alert-dismissible" role="alert">`,
                `   <div>${message}</div>`,
                '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
                '</div>'
            ].join('')

            alertPlaceholder.append(wrapper)
        }

        appendAlert(customMessage, type)

        //todo :
        setTimeout(() => {
            //const alertToHide = bootstrap.Alert.getOrCreateInstance('#success-alert')
            // alertToHide.close()

            //const alert = document.getElementById("success-alert")
            //const modalAlert = bootstrap.Alert.getInstance(alert)
            //modalAlert.hide()
        }, 3000)
    }

    function setupUI() {
        const token = localStorage.getItem("token")

        const loginDiv = document.getElementById("logged-in-div")

        const logoutDiv = document.getElementById("logout-div")

        const addBtn = document.getElementById("add-btn")

        if (token == null) {
            addBtn.style.setProperty("display", "none", "important")
            loginDiv.style.setProperty("display", "flex", "important")
            logoutDiv.style.setProperty("display", "none", "important")
        } else {
            addBtn.style.setProperty("display", "block", "important")
            loginDiv.style.setProperty("display", "none", "important")
            logoutDiv.style.setProperty("display", "flex", "important")

            const user = getCurrentUser()
            document.getElementById("nav-username").innerHTML = `@${user.username}`
            document.getElementById("nav-user-image").src = user.profile_image
        }
    }

    function getCurrentUser() {
        let user = null
        const storageUser = localStorage.getItem("user")

        if (storageUser != null) {
            user = JSON.parse(storageUser)
        }

        return user
    }
</script>

</html>